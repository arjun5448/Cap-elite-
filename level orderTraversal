class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        List<List<Integer>> l=new ArrayList<>();
         Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        if(root==null){
            return l ;
        }
        List<Integer>l2=new ArrayList<>();
        l2.add(root.val);
        l.add(l2);
        while (!queue.isEmpty()) {
            List<Integer>l1=new ArrayList<>();
            int size=queue.size();
           for (int i=1;i<=size;i++){
               TreeNode tempNode = queue.poll();
               if(tempNode.left!=null){
                 queue.add(tempNode.left);
                l1.add(tempNode.left.val);
            }
            if (tempNode.right != null) {
                queue.add(tempNode.right);
                l1.add(tempNode.right.val);
            }
           }
            if(l1.size()!=0){l.add(l1);}
            
    
        }
        return l;

    }

}
