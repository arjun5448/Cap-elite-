class Solution {
    List<Integer>l1=new ArrayList<>();
    public List<Integer> rightSideView(TreeNode root) {
        Queue<TreeNode> queue = new LinkedList<>();
        queue.add(root);
        if(root==null){
            return l1 ;
        }
        l1.add(root.val);
        while (!queue.isEmpty()) {
            List<Integer>l=new ArrayList<>();
            int size=queue.size();
           for (int i=1;i<=size;i++){
               TreeNode tempNode = queue.poll();
               if(tempNode.left!=null){
                 queue.add(tempNode.left);
                l.add(tempNode.left.val);
            }
            if (tempNode.right != null) {
                queue.add(tempNode.right);
                l.add(tempNode.right.val);
            }
           }
           if(l.size()>=1){l1.add(l.get(l.size()-1));};
    }
    return l1;
}
